{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/readsimulator/master/nextflow_schema.json",
    "title": "nf-core/readsimulator pipeline parameters",
    "description": "A workflow to simulate reads",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/readsimulator/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv",
                    "schema": "assets/schema_input.json"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "simulation_options": {
            "title": "Simulation options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Choose the data types that should be simulated by the pipeline.",
            "properties": {
                "amplicon": {
                    "type": "boolean",
                    "description": "Option to simulate amplicon sequencing reads.",
                    "fa_icon": "fas fa-question-circle"
                },
                "target_capture": {
                    "type": "boolean",
                    "description": "Option to simulate target capture sequencing reads.",
                    "fa_icon": "fas fa-question-circle"
                },
                "metagenome": {
                    "type": "boolean",
                    "description": "Option to simulate metagenomic sequencing reads.",
                    "fa_icon": "fas fa-question-circle"
                },
                "wholegenome": {
                    "type": "boolean",
                    "description": "Option to simulate wholegenomic sequencing reads.",
                    "fa_icon": "fas fa-question-circle"
                }
            }
        },
        "amplicon_options": {
            "title": "Amplicon options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for simulating amplicon sequencing reads.",
            "properties": {
                "amplicon_fw_primer": {
                    "type": "string",
                    "description": "Forward primer to use with crabs_insilicopcr.",
                    "default": "GTCGGTAAAACTCGTGCCAGC"
                },
                "amplicon_rv_primer": {
                    "type": "string",
                    "description": "Reverse primer to use with crabs_insilicopcr.",
                    "default": "CATAGTGGGGTATCTAATCCCAGTTTG"
                },
                "amplicon_read_count": {
                    "type": "integer",
                    "description": "Number of reads to be simulated per amplicon.",
                    "default": 500
                },
                "amplicon_read_length": {
                    "type": "integer",
                    "description": "Length of reads to be simulated.",
                    "default": 130
                },
                "amplicon_seq_system": {
                    "type": "string",
                    "description": "Sequencing system of reads to be simulated.",
                    "default": "HS25",
                    "help_text": "Can be 'GA1' for Genome Analyser I, 'GA2' for Genome Analyser II, 'HS10' for HiSeq 1000, 'HS20' for HiSeq 2000, 'HS25' for HiSeq 2500, 'HSXn' for HiSeqX PCR free, 'HSXt' for HiSeqX TruSeq, 'MinS' for MiniSeq TruSeq, 'MSv1' for MiSeq v1, 'MSv3' for MiSeq v3, or 'NS50' for NextSeq500 v2.",
                    "enum": ["GA1", "GA2", "HS10", "HS20", "HS25", "HSXn", "HSXt", "MinS", "MSv1", "MSv3", "NS50"]
                },
                "amplicon_crabs_ispcr_error": {
                    "type": "number",
                    "default": 4.5,
                    "description": "Maximum number of errors allowed in CRABS insilicoPCR primer sequences"
                }
            }
        },
        "target_capture_options": {
            "title": "Target capture options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for simulating target capture sequencing reads.",
            "properties": {
                "probe_file": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "description": "Path to bait/probe file. Can be a fasta file or a bed file.",
                    "help_text": "This parameter is *mandatory* if `--probe_ref_name` is not specified but `--target_capture` is specified.",
                    "fa_icon": "far fa-file-code"
                },
                "probe_ref_name": {
                    "type": "string",
                    "default": "Tetrapods-UCE-5Kv1",
                    "description": "Name of supported probe. Mandatory if not using `--probes` parameter.",
                    "help_text": "Supported probes are 'Tetrapods-UCE-2.5Kv1', 'Tetrapods-UCE-5Kv1', 'Actinopterygians-0.5Kv1', 'Acanthomorphs-1Kv1', 'Arachnida-1.1Kv1', 'Coleoptera-1.1Kv1', 'Diptera-2.7Kv1', 'Hemiptera-2.7Kv1', 'Hymenoptera-1.5Kv1', 'Hymenoptera-2.5Kv2', and 'Anthozoa-1.7Kv1'",
                    "enum": [
                        "Tetrapods-UCE-2.5Kv1",
                        "Tetrapods-UCE-5Kv1",
                        "Actinopterygians-0.5Kv1",
                        "Acanthomorphs-1Kv1",
                        "Arachnida-1.1Kv1",
                        "Coleoptera-1.1Kv1",
                        "Diptera-2.7Kv1",
                        "Hemiptera-2.7Kv1",
                        "Hymenoptera-1.5Kv1",
                        "Hymenoptera-2.5Kv2",
                        "Anthozoa-1.7Kv1"
                    ]
                },
                "target_capture_mode": {
                    "type": "string",
                    "default": "illumina",
                    "description": "Simulate 'illumina' or 'pacbio' reads.",
                    "enum": ["illumina", "pacbio"]
                },
                "target_capture_fmedian": {
                    "type": "integer",
                    "default": 500,
                    "description": "Median of fragment size at shearing."
                },
                "target_capture_fshape": {
                    "type": "number",
                    "default": 6,
                    "description": "Shape parameter of the fragment size distribution."
                },
                "target_capture_smedian": {
                    "type": "integer",
                    "default": 1300,
                    "description": "Median of fragment size distribution."
                },
                "target_capture_sshape": {
                    "type": "number",
                    "default": 6,
                    "description": "Shape parameter of the fragment size distribution."
                },
                "target_capture_tmedian": {
                    "type": "integer",
                    "description": "Median of target fragment size (the fragment size of the data). If specified, will override '--fmedian' and '--smedian'. Othersise will be estimated."
                },
                "target_capture_tshape": {
                    "type": "number",
                    "description": "Shape parameter of the effective fragment size distribution."
                },
                "target_capture_num": {
                    "type": "integer",
                    "default": 500000,
                    "description": "Number of fragments."
                },
                "target_capture_illen": {
                    "type": "integer",
                    "default": 150,
                    "description": "Illumina: read length."
                },
                "target_capture_pblen": {
                    "type": "integer",
                    "default": 30000,
                    "description": "PacBio: Average (polymerase) read length."
                },
                "target_capture_ilmode": {
                    "type": "string",
                    "default": "pe",
                    "description": "Illumina: Sequencing mode.",
                    "help_text": "'pe' = paired-end, 'mp' = mate-paired and 'se' = singled-end",
                    "enum": ["pe", "mp", "se"]
                }
            }
        },
        "metagenome_options": {
            "title": "Metagenome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for simulating metagenomic sequencing reads.",
            "properties": {
                "metagenome_abundance": {
                    "type": "string",
                    "default": "lognormal",
                    "description": "Abundance distribution.",
                    "help_text": "Can be 'uniform', 'halfnormal', 'exponential', 'lognormal', or 'zero_inflated_lognormal'",
                    "enum": ["uniform", "halfnormal", "exponential", "lognormal", "zero_inflated_lognormal"]
                },
                "metagenome_abundance_file": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "pattern": "^\\S+\\.tsv$",
                    "mimetype": "text/plain",
                    "description": "Path to tab-separated file containing abundance distribution.",
                    "help_text": "The first column should contain the genome and the second column should contain abundance proportion. It's recommended that the total abundace in your file equals 1."
                },
                "metagenome_coverage": {
                    "type": "string",
                    "description": "Coverage distribution.",
                    "help_text": "Can be 'uniform', 'halfnormal', 'exponential', 'lognormal', or 'zero_inflated_lognormal'",
                    "enum": ["uniform", "halfnormal", "exponential", "lognormal", "zero_inflated_lognormal"]
                },
                "metagenome_coverage_file": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "pattern": "^\\S+\\.tsv$",
                    "mimetype": "text/plain",
                    "description": "Path to tab-separated file containing coverage information.",
                    "help_text": "The first column should contain the genome and the second column should contain the coverage (e.g., use the value 20 for a coverage of 20X)."
                },
                "metagenome_input_format": {
                    "type": "string",
                    "default": "genomes",
                    "description": "Format of FASTA file used to generate reads",
                    "help_text": "If complete genomes are used (i.e. 1 sequence per genome FASTA) choose 'genomes'; if draft genomes are used (i.e. multiple sequences per genome FASTA) choose 'draft'",
                    "enum": ["genomes", "draft"]
                },
                "metagenome_n_reads": {
                    "type": "string",
                    "default": "1M",
                    "description": "Number of reads to generate.",
                    "help_text": "Supported suffixes are 'k', 'K', 'm', 'M', 'g', and 'G'."
                },
                "metagenome_mode": {
                    "type": "string",
                    "default": "kde",
                    "description": "Can be 'kde', or 'basic'.",
                    "help_text": "Set this to basic if you don't want to use a model with `--metagenome_model`.",
                    "enum": ["kde", "basic"]
                },
                "metagenome_model": {
                    "type": "string",
                    "default": "MiSeq",
                    "description": "Can be 'HiSeq', 'NovaSeq', or 'MiSeq'.",
                    "enum": ["HiSeq", "NovaSeq", "MiSeq"]
                },
                "metagenome_gc_bias": {
                    "type": "boolean",
                    "description": "Use this option to prevent simulating reads that have abnormal GC content."
                }
            }
        },
        "wholegenome_options": {
            "title": "Wholegenome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for simulating wholegenome sequencing reads.",
            "properties": {
                "wholegenome_error_rate": {
                    "type": "number",
                    "default": 0.02,
                    "description": "The base error rate."
                },
                "wholegenome_outer_dist": {
                    "type": "integer",
                    "default": 500,
                    "description": "The outer distance between the two ends."
                },
                "wholegenome_standard_dev": {
                    "type": "integer",
                    "default": 50,
                    "description": "The standard deviation."
                },
                "wholegenome_n_reads": {
                    "type": "integer",
                    "default": 1000000,
                    "description": "The number of read pairs."
                },
                "wholegenome_r1_length": {
                    "type": "integer",
                    "default": 70,
                    "description": "The length of the first reads."
                },
                "wholegenome_r2_length": {
                    "type": "integer",
                    "default": 70,
                    "description": "The length of the second reads."
                },
                "wholegenome_mutation_rate": {
                    "type": "number",
                    "default": 0.001,
                    "description": "The rate of mutations."
                },
                "wholegenome_indel_fraction": {
                    "type": "number",
                    "default": 0.15,
                    "description": "The fraction of indels."
                },
                "wholegenome_indel_extended": {
                    "type": "number",
                    "default": 0.3,
                    "description": "The probability that an indel is extended."
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to reference FASTA file.",
                    "help_text": "If this parameter is not used, the pipeline will download a fasta file, either using the `--genome` parameter or by using ncbi-genome-download (relevant parameters for ncbi-genome-download all start with `--ncbidownload_`).",
                    "fa_icon": "far fa-file-code"
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "ncbidownload_accessions": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "description": "Path to text file containing accession ids (one accession per row)."
                },
                "ncbidownload_taxids": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "description": "Path to text file containing taxids (one taxid per row)."
                },
                "ncbidownload_group": {
                    "type": "string",
                    "default": "all",
                    "description": "The NCBI taxonomic groups to download. Options include 'all', 'archaea', 'bacteria', 'fungi', 'invertebrate', 'metagenomes', 'plant', 'protozoa', 'vertebrate_mammalian', 'vertebrate_other', and 'viral'. A comma-separated list is also valid (e.g., 'bacteria,viral').",
                    "pattern": "^((all|archaea|bacteria|fungi|invertebrate|metagenomes|plant|protozoa|vertebrate_mammalian|vertebrate_other|viral)?,?)*(?<!,)$"
                },
                "ncbidownload_section": {
                    "type": "string",
                    "default": "refseq",
                    "description": "The NCBI section to download. 'refseq' or 'genbank'.",
                    "enum": ["refseq", "genbank"]
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/simulation_options"
        },
        {
            "$ref": "#/definitions/amplicon_options"
        },
        {
            "$ref": "#/definitions/target_capture_options"
        },
        {
            "$ref": "#/definitions/metagenome_options"
        },
        {
            "$ref": "#/definitions/wholegenome_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
